// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BlockDeviceSnapshotInitParameters struct {

	// +crossplane:generate:reference:type=BlockDevice
	BlockDeviceID *string `json:"blockDeviceId,omitempty" tf:"block_device_id,omitempty"`

	// Reference to a BlockDevice to populate blockDeviceId.
	// +kubebuilder:validation:Optional
	BlockDeviceIDRef *v1.Reference `json:"blockDeviceIdRef,omitempty" tf:"-"`

	// Selector for a BlockDevice to populate blockDeviceId.
	// +kubebuilder:validation:Optional
	BlockDeviceIDSelector *v1.Selector `json:"blockDeviceIdSelector,omitempty" tf:"-"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type BlockDeviceSnapshotLinksInitParameters struct {
}

type BlockDeviceSnapshotLinksObservation struct {
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// +listType=set
	Hrefs []*string `json:"hrefs,omitempty" tf:"hrefs,omitempty"`

	Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`
}

type BlockDeviceSnapshotLinksParameters struct {
}

type BlockDeviceSnapshotObservation struct {
	BlockDeviceID *string `json:"blockDeviceId,omitempty" tf:"block_device_id,omitempty"`

	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IsCurrent *bool `json:"isCurrent,omitempty" tf:"is_current,omitempty"`

	Links []BlockDeviceSnapshotLinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type BlockDeviceSnapshotParameters struct {

	// +crossplane:generate:reference:type=BlockDevice
	// +kubebuilder:validation:Optional
	BlockDeviceID *string `json:"blockDeviceId,omitempty" tf:"block_device_id,omitempty"`

	// Reference to a BlockDevice to populate blockDeviceId.
	// +kubebuilder:validation:Optional
	BlockDeviceIDRef *v1.Reference `json:"blockDeviceIdRef,omitempty" tf:"-"`

	// Selector for a BlockDevice to populate blockDeviceId.
	// +kubebuilder:validation:Optional
	BlockDeviceIDSelector *v1.Selector `json:"blockDeviceIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

// BlockDeviceSnapshotSpec defines the desired state of BlockDeviceSnapshot
type BlockDeviceSnapshotSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BlockDeviceSnapshotParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BlockDeviceSnapshotInitParameters `json:"initProvider,omitempty"`
}

// BlockDeviceSnapshotStatus defines the observed state of BlockDeviceSnapshot.
type BlockDeviceSnapshotStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BlockDeviceSnapshotObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BlockDeviceSnapshot is the Schema for the BlockDeviceSnapshots API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vra8}
type BlockDeviceSnapshot struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BlockDeviceSnapshotSpec   `json:"spec"`
	Status            BlockDeviceSnapshotStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BlockDeviceSnapshotList contains a list of BlockDeviceSnapshots
type BlockDeviceSnapshotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BlockDeviceSnapshot `json:"items"`
}

// Repository type metadata.
var (
	BlockDeviceSnapshot_Kind             = "BlockDeviceSnapshot"
	BlockDeviceSnapshot_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BlockDeviceSnapshot_Kind}.String()
	BlockDeviceSnapshot_KindAPIVersion   = BlockDeviceSnapshot_Kind + "." + CRDGroupVersion.String()
	BlockDeviceSnapshot_GroupVersionKind = CRDGroupVersion.WithKind(BlockDeviceSnapshot_Kind)
)

func init() {
	SchemeBuilder.Register(&BlockDeviceSnapshot{}, &BlockDeviceSnapshotList{})
}
